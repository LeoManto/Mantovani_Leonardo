/* Generated by AN DISI Unibo */ 
package it.unibo.clientsimulator

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Clientsimulator ( name: String, scope: CoroutineScope  ) : ActorBasicFsm( name, scope ){

	override fun getInitialState() : String{
		return "s0"
	}
	@kotlinx.coroutines.ObsoleteCoroutinesApi
	@kotlinx.coroutines.ExperimentalCoroutinesApi			
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		 var n=4  
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						if(  n>0  
						 ){forward("pickup", "pickup(pickup)" ,"outdoor" ) 
						 n = n-1  
						updateResourceRep("$n" 
						)
						delay(4000) 
						}
					}
					 transition( edgeName="goto",targetState="s0", cond=doswitch() )
				}	 
			}
		}
}
