/* Generated by AN DISI Unibo */ 
package it.unibo.sonarhandler

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Sonarhandler ( name: String, scope: CoroutineScope  ) : ActorBasicFsm( name, scope ){

	override fun getInitialState() : String{
		return "s0"
	}
	@kotlinx.coroutines.ObsoleteCoroutinesApi
	@kotlinx.coroutines.ExperimentalCoroutinesApi			
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		
				var distance	= 2000
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						println("OUTDOOR SONAR INIT | SONAR")
					}
					 transition(edgeName="t018",targetState="start",cond=whenDispatch("startsonar"))
				}	 
				state("start") { //this:State
					action { //it:State
						println("OUTDOOR SONAR START | SONAR")
					}
					 transition(edgeName="t019",targetState="handleSonarData",cond=whenEvent("sonaroutdoor"))
				}	 
				state("handleSonarData") { //this:State
					action { //it:State
						if( checkMsgContent( Term.createTerm("distance(V)"), Term.createTerm("distance(W)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								 distance = payloadArg(0).toInt()  
						}
						 if(distance < 30 && `it.unibo`.utils.ParkingSlotsKb.outdoorFree) {
										`it.unibo`.utils.ParkingSlotsKb.outdoorFree = false
						forward("starttimer", "timer(on)" ,"outdoortimer" ) 
						println("Car in OUTDOOR | SONAR")
						 }
									else if(distance >= 30 && !`it.unibo`.utils.ParkingSlotsKb.outdoorFree) {
										`it.unibo`.utils.ParkingSlotsKb.outdoorFree = true  
						forward("stoptimer", "timer(off)" ,"outdoortimer" ) 
						 }  
					}
					 transition(edgeName="t020",targetState="handleSonarData",cond=whenEvent("sonaroutdoor"))
				}	 
			}
		}
}
